{
   "compilerOptions": {
      /* Visit https://aka.ms/tsconfig.json to read more about this file */
      "target": "esnext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
      "module": "esnext" /* Specify what module code is generated. */,
      "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
      "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
      "outDir": "./dist" /* Specify an output folder for all emitted files. */,
      "removeComments": true /* Disable emitting comments. */,
      "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
      "strict": true /* Enable all strict type-checking options. */,
      "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
      "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
      "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
      "strictBindCallApply": true /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */,
      "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
      "noImplicitThis": true /* Enable error reporting when `this` is given the type `any`. */,
      "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
      "noUnusedLocals": true /* Enable error reporting when a local variables aren't read. */,
      "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
      "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
      "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
      "noPropertyAccessFromIndexSignature": true /* Enforces using indexed accessors for keys declared using an indexed type */
   }
}
